---
import { getAbsoluteLocaleUrl } from "astro:i18n";
import PostList from "../components/postsList/PostList";
import { useTranslations, type Locale } from "../i18n";
import Layout from "./Layout.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const pages = await getCollection("blog");

  const paths = pages.map((page) => {
    const [lang, ...slug] = page.slug.split("/");

    return { params: { lang, slug: slug.join("/") || undefined }, props: page };
  });

  return paths;
}

const locale = Astro.currentLocale as Locale;

const pages = await getStaticPaths();

const currentLocalePages = pages.filter((page) => page.params.lang === locale);

const posts = currentLocalePages.map((page) => {
  return {
    title: page.props.data.title,
    date: page.props.data.date,
    slug: page.params.slug as string,
    tagDisplayName: page.props.data.tag.displayName,
  };
});

const t = useTranslations(locale);
---

<Layout
  openGraph={{
    title: t({ en: "Posts", he: "פוסטים" }),
    url: getAbsoluteLocaleUrl(locale, "/"),
    description: t({ en: "List of all posts", he: "רשימת כל הפוסטים" }),
  }}
>
  <PostList posts={posts} locale={locale} />
</Layout>
